{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { getApi } from \"./api\";\nimport { useBool } from \"./useBool\";\nexport const useData = () => {\n  _s();\n\n  const {\n    changeIsModelDisabled,\n    changeIsYearDisabled\n  } = useBool();\n  let currentCarMake = \"\";\n  const [years, setYears] = useState([]);\n  const [carMakes, setCarMakes] = useState([]);\n  const [carModels, setCarModels] = useState([]);\n\n  const fetchYears = () => {\n    getApi(`query {\n      uvdb {\n        search_uvdb_years {\n          items {\n            id\n          }\n        }\n      }\n    }`).then(data => {\n      setYears(data.data.uvdb.search_uvdb_years.items);\n    });\n  };\n\n  const fetchCarMakes = () => {\n    getApi(`query {\n      uvdb {\n        search_uvdb_makes(limit: 534) {\n          items {\n            id\n            name\n          }\n        }\n      }\n    }`).then(data => {\n      setCarMakes(data.data.uvdb.search_uvdb_makes.items);\n    });\n  };\n\n  const fetchCarModels = makeId => {\n    getApi(`  query getModels($makeId: ID!) {\n      uvdb {\n        search_uvdb_models(uvdb_make_id: $makeId ) {\n          items {\n            id\n            name\n          }\n        }\n      }\n    }`, {\n      makeId: makeId\n    }).then(data => {\n      setCarModels(data.data.uvdb.search_uvdb_models.items);\n    });\n  };\n\n  const fillCarModels = async e => {\n    changeIsYearDisabled();\n    changeIsModelDisabled();\n    currentCarMake = e.target.value;\n    await fetchCarModels(currentCarMake);\n  };\n\n  return {\n    years,\n    carMakes,\n    carModels,\n    setCarModels,\n    fetchYears,\n    fetchCarMakes,\n    fetchCarModels,\n    fillCarModels\n  };\n};\n\n_s(useData, \"CWqRJfHfUqpXokDppDhxJ0AqQ3A=\", false, function () {\n  return [useBool];\n});","map":{"version":3,"sources":["/Users/edwardmiller/Documents/React/vehicle-selector/src/util/useData.js"],"names":["useState","getApi","useBool","useData","changeIsModelDisabled","changeIsYearDisabled","currentCarMake","years","setYears","carMakes","setCarMakes","carModels","setCarModels","fetchYears","then","data","uvdb","search_uvdb_years","items","fetchCarMakes","search_uvdb_makes","fetchCarModels","makeId","search_uvdb_models","fillCarModels","e","target","value"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,qBAAF;AAAyBC,IAAAA;AAAzB,MAAkDH,OAAO,EAA/D;AACA,MAAII,cAAc,GAAG,EAArB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMa,UAAU,GAAG,MAAM;AACvBZ,IAAAA,MAAM,CAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MARU,CAAN,CAQIa,IARJ,CAQUC,IAAD,IAAU;AACjBP,MAAAA,QAAQ,CAACO,IAAI,CAACA,IAAL,CAAUC,IAAV,CAAeC,iBAAf,CAAiCC,KAAlC,CAAR;AACD,KAVD;AAWD,GAZD;;AAcA,QAAMC,aAAa,GAAG,MAAM;AAC1BlB,IAAAA,MAAM,CAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MATU,CAAN,CASIa,IATJ,CASUC,IAAD,IAAU;AACjBL,MAAAA,WAAW,CAACK,IAAI,CAACA,IAAL,CAAUC,IAAV,CAAeI,iBAAf,CAAiCF,KAAlC,CAAX;AACD,KAXD;AAYD,GAbD;;AAeA,QAAMG,cAAc,GAAIC,MAAD,IAAY;AACjCrB,IAAAA,MAAM,CACH;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAVU,EAWJ;AAAEqB,MAAAA,MAAM,EAAEA;AAAV,KAXI,CAAN,CAYER,IAZF,CAYQC,IAAD,IAAU;AACfH,MAAAA,YAAY,CAACG,IAAI,CAACA,IAAL,CAAUC,IAAV,CAAeO,kBAAf,CAAkCL,KAAnC,CAAZ;AACD,KAdD;AAeD,GAhBD;;AAkBA,QAAMM,aAAa,GAAG,MAAOC,CAAP,IAAa;AACjCpB,IAAAA,oBAAoB;AACpBD,IAAAA,qBAAqB;AACrBE,IAAAA,cAAc,GAAGmB,CAAC,CAACC,MAAF,CAASC,KAA1B;AACA,UAAMN,cAAc,CAACf,cAAD,CAApB;AACD,GALD;;AAOA,SAAO;AACLC,IAAAA,KADK;AAELE,IAAAA,QAFK;AAGLE,IAAAA,SAHK;AAILC,IAAAA,YAJK;AAKLC,IAAAA,UALK;AAMLM,IAAAA,aANK;AAOLE,IAAAA,cAPK;AAQLG,IAAAA;AARK,GAAP;AAUD,CAvEM;;GAAMrB,O;UAC6CD,O","sourcesContent":["import { useState } from \"react\";\nimport { getApi } from \"./api\";\nimport { useBool } from \"./useBool\";\n\nexport const useData = () => {\n  const { changeIsModelDisabled, changeIsYearDisabled } = useBool();\n  let currentCarMake = \"\";\n  const [years, setYears] = useState([]);\n  const [carMakes, setCarMakes] = useState([]);\n  const [carModels, setCarModels] = useState([]);\n\n  const fetchYears = () => {\n    getApi(`query {\n      uvdb {\n        search_uvdb_years {\n          items {\n            id\n          }\n        }\n      }\n    }`).then((data) => {\n      setYears(data.data.uvdb.search_uvdb_years.items);\n    });\n  };\n\n  const fetchCarMakes = () => {\n    getApi(`query {\n      uvdb {\n        search_uvdb_makes(limit: 534) {\n          items {\n            id\n            name\n          }\n        }\n      }\n    }`).then((data) => {\n      setCarMakes(data.data.uvdb.search_uvdb_makes.items);\n    });\n  };\n\n  const fetchCarModels = (makeId) => {\n    getApi(\n      `  query getModels($makeId: ID!) {\n      uvdb {\n        search_uvdb_models(uvdb_make_id: $makeId ) {\n          items {\n            id\n            name\n          }\n        }\n      }\n    }`,\n      { makeId: makeId }\n    ).then((data) => {\n      setCarModels(data.data.uvdb.search_uvdb_models.items);\n    });\n  };\n\n  const fillCarModels = async (e) => {\n    changeIsYearDisabled();\n    changeIsModelDisabled();\n    currentCarMake = e.target.value;\n    await fetchCarModels(currentCarMake);\n  };\n\n  return {\n    years,\n    carMakes,\n    carModels,\n    setCarModels,\n    fetchYears,\n    fetchCarMakes,\n    fetchCarModels,\n    fillCarModels,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}