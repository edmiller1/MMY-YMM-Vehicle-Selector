{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { getApi } from \"./api\";\nexport const useData = () => {\n  _s();\n\n  //Data\n  let currentCarMake = \"\";\n  const [years, setYears] = useState([]);\n  const [carMakes, setCarMakes] = useState([]);\n  const [carModels, setCarModels] = useState([]); //Booleans\n\n  const [isSwitched, setIsSwitched] = useState(true);\n  const [isYearDisabled, setIsYearDisabled] = useState(false);\n  const [isMakeDisabled, setIsMakeDisabled] = useState(true);\n  const [isModelDisabled, setIsModelDisabled] = useState(true);\n\n  const fetchYears = () => {\n    getApi(`query {\n      uvdb {\n        search_uvdb_years {\n          items {\n            id\n          }\n        }\n      }\n    }`).then(data => {\n      setYears(data.data.uvdb.search_uvdb_years.items);\n    });\n  };\n\n  const fetchCarMakes = () => {\n    getApi(`query {\n      uvdb {\n        search_uvdb_makes(limit: 534) {\n          items {\n            id\n            name\n          }\n        }\n      }\n    }`).then(data => {\n      setCarMakes(data.data.uvdb.search_uvdb_makes.items);\n    });\n  };\n\n  const fetchCarModels = makeId => {\n    getApi(`  query getModels($makeId: ID!) {\n      uvdb {\n        search_uvdb_models(uvdb_make_id: $makeId ) {\n          items {\n            id\n            name\n          }\n        }\n      }\n    }`, {\n      makeId: makeId\n    }).then(data => {\n      setCarModels(data.data.uvdb.search_uvdb_models.items);\n    });\n  };\n\n  const fillCarModels = async e => {\n    currentCarMake = e.target.value;\n    await fetchCarModels(currentCarMake);\n  };\n\n  return {\n    years,\n    carMakes,\n    carModels,\n    setCarModels,\n    fetchYears,\n    fetchCarMakes,\n    fetchCarModels\n  };\n};\n\n_s(useData, \"ib0pzUzTI1UUH9tt3xFsyqZOzXA=\");","map":{"version":3,"sources":["/Users/edwardmiller/Documents/React/vehicle-selector/src/util/useData.js"],"names":["useState","getApi","useData","currentCarMake","years","setYears","carMakes","setCarMakes","carModels","setCarModels","isSwitched","setIsSwitched","isYearDisabled","setIsYearDisabled","isMakeDisabled","setIsMakeDisabled","isModelDisabled","setIsModelDisabled","fetchYears","then","data","uvdb","search_uvdb_years","items","fetchCarMakes","search_uvdb_makes","fetchCarModels","makeId","search_uvdb_models","fillCarModels","e","target","value"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,OAAvB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B;AACA,MAAIC,cAAc,GAAG,EAArB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C,CAL2B,CAO3B;;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACgB,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAC,IAAD,CAAtD;;AAEA,QAAMkB,UAAU,GAAG,MAAM;AACvBjB,IAAAA,MAAM,CAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MARU,CAAN,CAQIkB,IARJ,CAQUC,IAAD,IAAU;AACjBf,MAAAA,QAAQ,CAACe,IAAI,CAACA,IAAL,CAAUC,IAAV,CAAeC,iBAAf,CAAiCC,KAAlC,CAAR;AACD,KAVD;AAWD,GAZD;;AAcA,QAAMC,aAAa,GAAG,MAAM;AAC1BvB,IAAAA,MAAM,CAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MATU,CAAN,CASIkB,IATJ,CASUC,IAAD,IAAU;AACjBb,MAAAA,WAAW,CAACa,IAAI,CAACA,IAAL,CAAUC,IAAV,CAAeI,iBAAf,CAAiCF,KAAlC,CAAX;AACD,KAXD;AAYD,GAbD;;AAeA,QAAMG,cAAc,GAAIC,MAAD,IAAY;AACjC1B,IAAAA,MAAM,CACH;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAVU,EAWJ;AAAE0B,MAAAA,MAAM,EAAEA;AAAV,KAXI,CAAN,CAYER,IAZF,CAYQC,IAAD,IAAU;AACfX,MAAAA,YAAY,CAACW,IAAI,CAACA,IAAL,CAAUC,IAAV,CAAeO,kBAAf,CAAkCL,KAAnC,CAAZ;AACD,KAdD;AAeD,GAhBD;;AAkBA,QAAMM,aAAa,GAAG,MAAOC,CAAP,IAAa;AACjC3B,IAAAA,cAAc,GAAG2B,CAAC,CAACC,MAAF,CAASC,KAA1B;AACA,UAAMN,cAAc,CAACvB,cAAD,CAApB;AACD,GAHD;;AAKA,SAAO;AACLC,IAAAA,KADK;AAELE,IAAAA,QAFK;AAGLE,IAAAA,SAHK;AAILC,IAAAA,YAJK;AAKLS,IAAAA,UALK;AAMLM,IAAAA,aANK;AAOLE,IAAAA;AAPK,GAAP;AASD,CA1EM;;GAAMxB,O","sourcesContent":["import { useState } from \"react\";\nimport { getApi } from \"./api\";\n\nexport const useData = () => {\n  //Data\n  let currentCarMake = \"\";\n  const [years, setYears] = useState([]);\n  const [carMakes, setCarMakes] = useState([]);\n  const [carModels, setCarModels] = useState([]);\n\n  //Booleans\n  const [isSwitched, setIsSwitched] = useState(true);\n  const [isYearDisabled, setIsYearDisabled] = useState(false);\n  const [isMakeDisabled, setIsMakeDisabled] = useState(true);\n  const [isModelDisabled, setIsModelDisabled] = useState(true);\n\n  const fetchYears = () => {\n    getApi(`query {\n      uvdb {\n        search_uvdb_years {\n          items {\n            id\n          }\n        }\n      }\n    }`).then((data) => {\n      setYears(data.data.uvdb.search_uvdb_years.items);\n    });\n  };\n\n  const fetchCarMakes = () => {\n    getApi(`query {\n      uvdb {\n        search_uvdb_makes(limit: 534) {\n          items {\n            id\n            name\n          }\n        }\n      }\n    }`).then((data) => {\n      setCarMakes(data.data.uvdb.search_uvdb_makes.items);\n    });\n  };\n\n  const fetchCarModels = (makeId) => {\n    getApi(\n      `  query getModels($makeId: ID!) {\n      uvdb {\n        search_uvdb_models(uvdb_make_id: $makeId ) {\n          items {\n            id\n            name\n          }\n        }\n      }\n    }`,\n      { makeId: makeId }\n    ).then((data) => {\n      setCarModels(data.data.uvdb.search_uvdb_models.items);\n    });\n  };\n\n  const fillCarModels = async (e) => {\n    currentCarMake = e.target.value;\n    await fetchCarModels(currentCarMake);\n  };\n\n  return {\n    years,\n    carMakes,\n    carModels,\n    setCarModels,\n    fetchYears,\n    fetchCarMakes,\n    fetchCarModels,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}