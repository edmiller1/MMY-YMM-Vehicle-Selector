{"ast":null,"code":"import _slicedToArray from\"/Users/edwardmiller/Documents/GitHub/MMY-YMM-Vehicle-Selector/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{getApi}from\"./api\";export var useData=function useData(){//Data\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),years=_useState2[0],setYears=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),carMakes=_useState4[0],setCarMakes=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),carModels=_useState6[0],setCarModels=_useState6[1];//Fetches the Years from the graphql API\nvar fetchYears=function fetchYears(){getApi(\"query {\\n      uvdb {\\n        search_uvdb_years {\\n          items {\\n            id\\n          }\\n        }\\n      }\\n    }\").then(function(data){setYears(data.data.uvdb.search_uvdb_years.items);});};//Fetches the car makes from the graphql API\nvar fetchCarMakes=function fetchCarMakes(){getApi(\"query {\\n      uvdb {\\n        search_uvdb_makes(limit: 534) {\\n          items {\\n            id\\n            name\\n          }\\n        }\\n      }\\n    }\").then(function(data){setCarMakes(data.data.uvdb.search_uvdb_makes.items);});};//Fetches the car models from the graphql API dpending on the car make ID passed in as a parameter\nvar fetchCarModels=function fetchCarModels(makeId){getApi(\"  query getModels($makeId: ID!) {\\n      uvdb {\\n        search_uvdb_models(uvdb_make_id: $makeId ) {\\n          items {\\n            id\\n            name\\n          }\\n        }\\n      }\\n    }\",{makeId:makeId}).then(function(data){setCarModels(data.data.uvdb.search_uvdb_models.items);});};return{years:years,carMakes:carMakes,carModels:carModels,setCarModels:setCarModels,fetchYears:fetchYears,fetchCarMakes:fetchCarMakes,fetchCarModels:fetchCarModels};};","map":{"version":3,"sources":["/Users/edwardmiller/Documents/GitHub/MMY-YMM-Vehicle-Selector/src/util/useData.js"],"names":["useState","getApi","useData","years","setYears","carMakes","setCarMakes","carModels","setCarModels","fetchYears","then","data","uvdb","search_uvdb_years","items","fetchCarMakes","search_uvdb_makes","fetchCarModels","makeId","search_uvdb_models"],"mappings":"oLAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,MAAT,KAAuB,OAAvB,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAC3B;AAD2B,cAEDF,QAAQ,CAAC,EAAD,CAFP,wCAEpBG,KAFoB,eAEbC,QAFa,8BAGKJ,QAAQ,CAAC,EAAD,CAHb,yCAGpBK,QAHoB,eAGVC,WAHU,8BAION,QAAQ,CAAC,EAAD,CAJf,yCAIpBO,SAJoB,eAITC,YAJS,eAM3B;AACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBR,MAAM,iIAAN,CAQIS,IARJ,CAQS,SAACC,IAAD,CAAU,CACjBP,QAAQ,CAACO,IAAI,CAACA,IAAL,CAAUC,IAAV,CAAeC,iBAAf,CAAiCC,KAAlC,CAAR,CACD,CAVD,EAWD,CAZD,CAcA;AACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1Bd,MAAM,+JAAN,CASIS,IATJ,CASS,SAACC,IAAD,CAAU,CACjBL,WAAW,CAACK,IAAI,CAACA,IAAL,CAAUC,IAAV,CAAeI,iBAAf,CAAiCF,KAAlC,CAAX,CACD,CAXD,EAYD,CAbD,CAeA;AACA,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,MAAD,CAAY,CACjCjB,MAAM,sMAWJ,CAAEiB,MAAM,CAAEA,MAAV,CAXI,CAAN,CAYER,IAZF,CAYO,SAACC,IAAD,CAAU,CACfH,YAAY,CAACG,IAAI,CAACA,IAAL,CAAUC,IAAV,CAAeO,kBAAf,CAAkCL,KAAnC,CAAZ,CACD,CAdD,EAeD,CAhBD,CAkBA,MAAO,CACLX,KAAK,CAALA,KADK,CAELE,QAAQ,CAARA,QAFK,CAGLE,SAAS,CAATA,SAHK,CAILC,YAAY,CAAZA,YAJK,CAKLC,UAAU,CAAVA,UALK,CAMLM,aAAa,CAAbA,aANK,CAOLE,cAAc,CAAdA,cAPK,CAAP,CASD,CAjEM","sourcesContent":["import { useState } from \"react\";\nimport { getApi } from \"./api\";\n\nexport const useData = () => {\n  //Data\n  const [years, setYears] = useState([]);\n  const [carMakes, setCarMakes] = useState([]);\n  const [carModels, setCarModels] = useState([]);\n\n  //Fetches the Years from the graphql API\n  const fetchYears = () => {\n    getApi(`query {\n      uvdb {\n        search_uvdb_years {\n          items {\n            id\n          }\n        }\n      }\n    }`).then((data) => {\n      setYears(data.data.uvdb.search_uvdb_years.items);\n    });\n  };\n\n  //Fetches the car makes from the graphql API\n  const fetchCarMakes = () => {\n    getApi(`query {\n      uvdb {\n        search_uvdb_makes(limit: 534) {\n          items {\n            id\n            name\n          }\n        }\n      }\n    }`).then((data) => {\n      setCarMakes(data.data.uvdb.search_uvdb_makes.items);\n    });\n  };\n\n  //Fetches the car models from the graphql API dpending on the car make ID passed in as a parameter\n  const fetchCarModels = (makeId) => {\n    getApi(\n      `  query getModels($makeId: ID!) {\n      uvdb {\n        search_uvdb_models(uvdb_make_id: $makeId ) {\n          items {\n            id\n            name\n          }\n        }\n      }\n    }`,\n      { makeId: makeId }\n    ).then((data) => {\n      setCarModels(data.data.uvdb.search_uvdb_models.items);\n    });\n  };\n\n  return {\n    years,\n    carMakes,\n    carModels,\n    setCarModels,\n    fetchYears,\n    fetchCarMakes,\n    fetchCarModels,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}